{"version":3,"sources":["../../src/pages/add-task/add-task.module.ts","../../src/pages/add-task/add-task.ts","../../node_modules/@ionic-native/calendar/index.js"],"names":[],"mappings":"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P;oBACE,IAAI,EAAE,UAAU;oBAChB,IAAI,EAAE,QAAQ;iBACf;gBACD;oBACE,IAAI,EAAE,OAAO;oBACb,OAAO,EAAE;wBAEP,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;oBAC5C,CAAC;iBACF;aACF;SACF,CAAC,CAAC;QAEH,KAAK,CAAC,OAAO,EAAE,CAAC;IAElB,CAAC;IAhHU,WAAW;QAJvB,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;WACG;SAC7B,CAAC;oBAoB6R;OAnBlR,WAAW,CAkHvB;IAAD,CAAC;AAAA;SAlHY,WAAW,gB;;;;;;;;ACfxB;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AAC6B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,eAAe,kBAAkB,EAAE;AACnC,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uBAAuB;AACtC,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,mBAAmB,aAAa;AAChC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,KAAK;AACpB,eAAe,KAAK;AACpB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,KAAK;AACtB,iBAAiB,KAAK;AACtB,mBAAmB,aAAa;AAChC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,KA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AAiB,KAAK;AACtB,kBAAkB,aAAa;AAC/B;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,iEAAU,EAAE;AAC5B;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA,gDAAgD;AAChD;AACA;AACA;AACA,mBAAmB,kBAAkB,EAAE;AACvC,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0EAAM;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,CAAC,6EAAiB;AACC;AACpB,iC","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { AddTaskPage } from './add-task';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AddTaskPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(AddTaskPage),\r\n  ],\r\n})\r\nexport class AddTaskPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add-task/add-task.module.ts","\r\nimport { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, AlertController, Platform, ViewController } from 'ionic-angular';\r\nimport { Calendar, CalendarOptions } from '@ionic-native/calendar';\r\nimport { Storage } from '@ionic/storage';\r\nimport { User, Properties }from '../../providers';\r\nimport { FormBuilder, FormGroup, Validators } from '../../../node_modules/@angular/forms';\r\n\r\n\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-add-task',\r\n  templateUrl: 'add-task.html',\r\n})\r\nexport class AddTaskPage {\r\n\r\n  public event = { user: 0, folio: 0, subject: \"\", startDate: \"\", startTime: \"\", endDate: \"\", endTime: \"\", reDate: \"\", reTime: \"\", descripcion: \"\" };\r\n\r\n  contactUser: FormGroup;\r\n  public client = false;\r\n  public nameClient = '';\r\n  public date: any;\r\n  public time: any;\r\n  public myDate: any;\r\n  public monthName: any;\r\n  public shortMonthName: any;\r\n  public subjet: any = [];\r\n  public calendars: any;\r\n  public calendarId = 2;\r\n  public phoneCalendar = false;\r\n\r\n  public leadForm: FormGroup;\r\n\r\n  constructor(public formBuilder: FormBuilder, public navCtrl: NavController,    public navParams: NavParams,    private storage: Storage,    public alertCtrl: AlertController,    private calendar: Calendar,    public platform: Platform,private user: User,public viewCtrl: ViewController) {\r\n\r\n\r\n    this.leadForm = formBuilder.group({\r\n      subject: ['', [Validators.required]],\r\n      descripcion: ['', [Validators.required]]\r\n    });\r\n\r\n\r\n  }\r\n  valid(){\r\n\r\n  \r\n    if(this.leadForm.valid){\r\n      return false;\r\n    }else{\r\n\r\n      return true;\r\n\r\n    }\r\n  }\r\n    ionViewDidLoad() {\r\n    //console.log('ionViewDidLoad AddTaskPage');\r\n  } \r\n\r\n\r\n  save() {\r\n\r\n    console.log(this.event.subject);\r\n    console.log(\" - \");\r\n    console.log(this.event.descripcion)\r\n\r\n    switch (this.event.subject) {\r\n      case '1':\r\n        \r\n        break;\r\n      case '2':\r\n\r\n        break;\r\n      case '3':\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  goCliente() {\r\n\r\n    this.navCtrl.push('LeadPickeadPage', 'lead').then(() => {\r\n\r\n      this.navCtrl.getActive().onDidDismiss(data => {\r\n        //console.log(data);\r\n        if (data) {\r\n          //console.log('si');\r\n          this.client = true;\r\n          this.nameClient = data.fullname;\r\n          this.event.folio = data.folio;\r\n        } else {\r\n          //console.log('no');\r\n          this.client = false;\r\n        }\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  close() {\r\n\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Atención',\r\n      message: 'Se perderá la información del formulario',\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n        },\r\n        {\r\n          text: 'Salir',\r\n          handler: () => {\r\n\r\n            this.viewCtrl.dismiss({ data: 'reload' });\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    alert.present();\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add-task/add-task.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n/**\n * @name Calendar\n * @description\n * This plugin allows you to add events to the Calendar of the mobile device.\n *\n * Requires Cordova plugin: `cordova-plugin-calendar`. For more info, please see the [Calendar plugin docs](https://github.com/EddyVerbruggen/Calendar-PhoneGap-Plugin).\n *\n *\n * @usage\n * ```typescript\n * import { Calendar } from '@ionic-native/calendar';\n *\n * constructor(private calendar: Calendar) { }\n *\n *\n * this.calendar.createCalendar('MyCalendar').then(\n *   (msg) => { console.log(msg); },\n *   (err) => { console.log(err); }\n * );\n * ```\n * @interfaces\n * CalendarOptions\n * NameOrOptions\n */\nvar Calendar = (function (_super) {\n    __extends(Calendar, _super);\n    function Calendar() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * This function checks if we have permission to read/write from/to the calendar.\n     * The promise will resolve with `true` when:\n     * - You're running on iOS, or\n     * - You're targeting API level lower than 23, or\n     * - You're using Android < 6, or\n     * - You've already granted permission\n     *\n     * If this returns false, you should call the `requestReadWritePermission` function\n     * @returns {Promise<boolean>}\n     */\n    /**\n       * This function checks if we have permission to read/write from/to the calendar.\n       * The promise will resolve with `true` when:\n       * - You're running on iOS, or\n       * - You're targeting API level lower than 23, or\n       * - You're using Android < 6, or\n       * - You've already granted permission\n       *\n       * If this returns false, you should call the `requestReadWritePermission` function\n       * @returns {Promise<boolean>}\n       */\n    Calendar.prototype.hasReadWritePermission = /**\n       * This function checks if we have permission to read/write from/to the calendar.\n       * The promise will resolve with `true` when:\n       * - You're running on iOS, or\n       * - You're targeting API level lower than 23, or\n       * - You're using Android < 6, or\n       * - You've already granted permission\n       *\n       * If this returns false, you should call the `requestReadWritePermission` function\n       * @returns {Promise<boolean>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Check if we have read permission\n     * @returns {Promise<boolean>}\n     */\n    /**\n       * Check if we have read permission\n       * @returns {Promise<boolean>}\n       */\n    Calendar.prototype.hasReadPermission = /**\n       * Check if we have read permission\n       * @returns {Promise<boolean>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Check if we have write permission\n     * @returns {Promise<boolean>}\n     */\n    /**\n       * Check if we have write permission\n       * @returns {Promise<boolean>}\n       */\n    Calendar.prototype.hasWritePermission = /**\n       * Check if we have write permission\n       * @returns {Promise<boolean>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Request write permission\n     * @returns {Promise<any>}\n     */\n    /**\n       * Request write permission\n       * @returns {Promise<any>}\n       */\n    Calendar.prototype.requestWritePermission = /**\n       * Request write permission\n       * @returns {Promise<any>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Request read permission\n     * @returns {Promise<any>}\n     */\n    /**\n       * Request read permission\n       * @returns {Promise<any>}\n       */\n    Calendar.prototype.requestReadPermission = /**\n       * Request read permission\n       * @returns {Promise<any>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Requests read/write permissions\n     * @returns {Promise<any>}\n     */\n    /**\n       * Requests read/write permissions\n       * @returns {Promise<any>}\n       */\n    Calendar.prototype.requestReadWritePermission = /**\n       * Requests read/write permissions\n       * @returns {Promise<any>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Create a calendar. (iOS only)\n     *\n     * @param {string | NameOrOptions} nameOrOptions  either a string name or a options object. If string, provide the calendar name. IF an object, provide a calendar name as a string and a calendar color in hex format as a string\n     * @returns {Promise<any>} Returns a Promise\n     */\n    /**\n       * Create a calendar. (iOS only)\n       *\n       * @param {string | NameOrOptions} nameOrOptions  either a string name or a options object. If string, provide the calendar name. IF an object, provide a calendar name as a string and a calendar color in hex format as a string\n       * @returns {Promise<any>} Returns a Promise\n       */\n    Calendar.prototype.createCalendar = /**\n       * Create a calendar. (iOS only)\n       *\n       * @param {string | NameOrOptions} nameOrOptions  either a string name or a options object. If string, provide the calendar name. IF an object, provide a calendar name as a string and a calendar color in hex format as a string\n       * @returns {Promise<any>} Returns a Promise\n       */\n    function (nameOrOptions) {\n        return;\n    };\n    /**\n     * Delete a calendar. (iOS only)\n     * @param {string} name  Name of the calendar to delete.\n     * @returns {Promise<any>} Returns a Promise\n     */\n    /**\n       * Delete a calendar. (iOS only)\n       * @param {string} name  Name of the calendar to delete.\n       * @returns {Promise<any>} Returns a Promise\n       */\n    Calendar.prototype.deleteCalendar = /**\n       * Delete a calendar. (iOS only)\n       * @param {string} name  Name of the calendar to delete.\n       * @returns {Promise<any>} Returns a Promise\n       */\n    function (name) {\n        return;\n    };\n    /**\n     * Returns the default calendar options.\n     *\n     * @return {CalendarOptions} Returns an object with the default calendar options\n     */\n    /**\n       * Returns the default calendar options.\n       *\n       * @return {CalendarOptions} Returns an object with the default calendar options\n       */\n    Calendar.prototype.getCalendarOptions = /**\n       * Returns the default calendar options.\n       *\n       * @return {CalendarOptions} Returns an object with the default calendar options\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns options for a custom calender with specific color\n     *\n     * @return {NameOrOptions} Returns an object with the default options\n     */\n    /**\n       * Returns options for a custom calender with specific color\n       *\n       * @return {NameOrOptions} Returns an object with the default options\n       */\n    Calendar.prototype.getCreateCalendarOptions = /**\n       * Returns options for a custom calender with specific color\n       *\n       * @return {NameOrOptions} Returns an object with the default options\n       */\n    function () {\n        return;\n    };\n    /**\n     * Silently create an event.\n     * @param {string} [title]  The event title\n     * @param {string} [location]  The event location\n     * @param {string} [notes]  The event notes\n     * @param {Date} [startDate]  The event start date\n     * @param {Date} [endDate]  The event end date\n     * @returns {Promise<any>} Returns a Promise\n     */\n    /**\n       * Silently create an event.\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @returns {Promise<any>} Returns a Promise\n       */\n    Calendar.prototype.createEvent = /**\n       * Silently create an event.\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @returns {Promise<any>} Returns a Promise\n       */\n    function (title, location, notes, startDate, endDate) {\n        return;\n    };\n    /**\n     * Silently create an event with additional options.\n     *\n     * @param {string} [title]  The event title\n     * @param {string} [location]  The event location\n     * @param {string} [notes]  The event notes\n     * @param {Date} [startDate]  The event start date\n     * @param {Date} [endDate]  The event end date\n     * @param {CalendarOptions} [options]  Additional options, see `getCalendarOptions`\n     * @returns {Promise<any>} Returns a Promise\n     */\n    /**\n       * Silently create an event with additional options.\n       *\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @param {CalendarOptions} [options]  Additional options, see `getCalendarOptions`\n       * @returns {Promise<any>} Returns a Promise\n       */\n    Calendar.prototype.createEventWithOptions = /**\n       * Silently create an event with additional options.\n       *\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @param {CalendarOptions} [options]  Additional options, see `getCalendarOptions`\n       * @returns {Promise<any>} Returns a Promise\n       */\n    function (title, location, notes, startDate, endDate, options) {\n        return;\n    };\n    /**\n     * Interactively create an event.\n     *\n     * @param {string} [title]  The event title\n     * @param {string} [location]  The event location\n     * @param {string} [notes]  The event notes\n     * @param {Date} [startDate]  The event start date\n     * @param {Date} [endDate]  The event end date\n     * @returns {Promise<any>} Returns a Promise\n     */\n    /**\n       * Interactively create an event.\n       *\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @returns {Promise<any>} Returns a Promise\n       */\n    Calendar.prototype.createEventInteractively = /**\n       * Interactively create an event.\n       *\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @returns {Promise<any>} Returns a Promise\n       */\n    function (title, location, notes, startDate, endDate) {\n        return;\n    };\n    /**\n     * Interactively create an event with additional options.\n     *\n     * @param {string} [title]  The event title\n     * @param {string} [location]  The event location\n     * @param {string} [notes]  The event notes\n     * @param {Date} [startDate]  The event start date\n     * @param {Date} [endDate]  The event end date\n     * @param {CalendarOptions} [options]  Additional options, see `getCalendarOptions`\n     * @returns {Promise<any>}\n     */\n    /**\n       * Interactively create an event with additional options.\n       *\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @param {CalendarOptions} [options]  Additional options, see `getCalendarOptions`\n       * @returns {Promise<any>}\n       */\n    Calendar.prototype.createEventInteractivelyWithOptions = /**\n       * Interactively create an event with additional options.\n       *\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @param {CalendarOptions} [options]  Additional options, see `getCalendarOptions`\n       * @returns {Promise<any>}\n       */\n    function (title, location, notes, startDate, endDate, options) {\n        return;\n    };\n    /**\n     * Find an event.\n     *\n     * @param {string} [title]  The event title\n     * @param {string} [location]  The event location\n     * @param {string} [notes]  The event notes\n     * @param {Date} [startDate]  The event start date\n     * @param {Date} [endDate]  The event end date\n     * @returns {Promise<any>}\n     */\n    /**\n       * Find an event.\n       *\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @returns {Promise<any>}\n       */\n    Calendar.prototype.findEvent = /**\n       * Find an event.\n       *\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @returns {Promise<any>}\n       */\n    function (title, location, notes, startDate, endDate) {\n        return;\n    };\n    /**\n     * Find an event with additional options.\n     * @param {string} [title]  The event title\n     * @param {string} [location]  The event location\n     * @param {string} [notes]  The event notes\n     * @param {Date} [startDate]  The event start date\n     * @param {Date} [endDate]  The event end date\n     * @param {CalendarOptions} [options]  Additional options, see `getCalendarOptions`\n     * @returns {Promise<any>} Returns a Promise that resolves with the event, or rejects with an error.\n     */\n    /**\n       * Find an event with additional options.\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @param {CalendarOptions} [options]  Additional options, see `getCalendarOptions`\n       * @returns {Promise<any>} Returns a Promise that resolves with the event, or rejects with an error.\n       */\n    Calendar.prototype.findEventWithOptions = /**\n       * Find an event with additional options.\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @param {CalendarOptions} [options]  Additional options, see `getCalendarOptions`\n       * @returns {Promise<any>} Returns a Promise that resolves with the event, or rejects with an error.\n       */\n    function (title, location, notes, startDate, endDate, options) {\n        return;\n    };\n    /**\n     * Find a list of events within the specified date range. (Android only)\n     *\n     * @param {Date} [startDate]  The start date\n     * @param {Date} [endDate]  The end date\n     * @returns {Promise<any>} Returns a Promise that resolves with the list of events, or rejects with an error.\n     */\n    /**\n       * Find a list of events within the specified date range. (Android only)\n       *\n       * @param {Date} [startDate]  The start date\n       * @param {Date} [endDate]  The end date\n       * @returns {Promise<any>} Returns a Promise that resolves with the list of events, or rejects with an error.\n       */\n    Calendar.prototype.listEventsInRange = /**\n       * Find a list of events within the specified date range. (Android only)\n       *\n       * @param {Date} [startDate]  The start date\n       * @param {Date} [endDate]  The end date\n       * @returns {Promise<any>} Returns a Promise that resolves with the list of events, or rejects with an error.\n       */\n    function (startDate, endDate) {\n        return;\n    };\n    /**\n     * Get a list of all calendars.\n     * @returns {Promise<any>} A Promise that resolves with the list of calendars, or rejects with an error.\n     */\n    /**\n       * Get a list of all calendars.\n       * @returns {Promise<any>} A Promise that resolves with the list of calendars, or rejects with an error.\n       */\n    Calendar.prototype.listCalendars = /**\n       * Get a list of all calendars.\n       * @returns {Promise<any>} A Promise that resolves with the list of calendars, or rejects with an error.\n       */\n    function () {\n        return;\n    };\n    /**\n     * Get a list of all future events in the specified calendar. (iOS only)\n     * @returns {Promise<any>} Returns a Promise that resolves with the list of events, or rejects with an error.\n     */\n    /**\n       * Get a list of all future events in the specified calendar. (iOS only)\n       * @returns {Promise<any>} Returns a Promise that resolves with the list of events, or rejects with an error.\n       */\n    Calendar.prototype.findAllEventsInNamedCalendar = /**\n       * Get a list of all future events in the specified calendar. (iOS only)\n       * @returns {Promise<any>} Returns a Promise that resolves with the list of events, or rejects with an error.\n       */\n    function (calendarName) {\n        return;\n    };\n    /**\n     * Modify an event. (iOS only)\n     *\n     * @param {string} [title]  The event title\n     * @param {string} [location]  The event location\n     * @param {string} [notes]  The event notes\n     * @param {Date} [startDate]  The event start date\n     * @param {Date} [endDate]  The event end date\n     * @param {string} [newTitle]  The new event title\n     * @param {string} [newLocation]  The new event location\n     * @param {string} [newNotes]  The new event notes\n     * @param {Date} [newStartDate]  The new event start date\n     * @param {Date} [newEndDate]  The new event end date\n     * @return Returns a Promise\n     */\n    /**\n       * Modify an event. (iOS only)\n       *\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @param {string} [newTitle]  The new event title\n       * @param {string} [newLocation]  The new event location\n       * @param {string} [newNotes]  The new event notes\n       * @param {Date} [newStartDate]  The new event start date\n       * @param {Date} [newEndDate]  The new event end date\n       * @return Returns a Promise\n       */\n    Calendar.prototype.modifyEvent = /**\n       * Modify an event. (iOS only)\n       *\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @param {string} [newTitle]  The new event title\n       * @param {string} [newLocation]  The new event location\n       * @param {string} [newNotes]  The new event notes\n       * @param {Date} [newStartDate]  The new event start date\n       * @param {Date} [newEndDate]  The new event end date\n       * @return Returns a Promise\n       */\n    function (title, location, notes, startDate, endDate, newTitle, newLocation, newNotes, newStartDate, newEndDate) {\n        return;\n    };\n    /**\n     * Modify an event with additional options. (iOS only)\n     *\n     * @param {string} [title]  The event title\n     * @param {string} [location]  The event location\n     * @param {string} [notes]  The event notes\n     * @param {Date} [startDate]  The event start date\n     * @param {Date} [endDate]  The event end date\n     * @param {string} [newTitle]  The new event title\n     * @param {string} [newLocation]  The new event location\n     * @param {string} [newNotes]  The new event notes\n     * @param {Date} [newStartDate]  The new event start date\n     * @param {Date} [newEndDate]  The new event end date\n     * @param {CalendarOptions} [filterOptions] Event Options, see `getCalendarOptions`\n     * @param {CalendarOptions} [newOptions]  New event options, see `getCalendarOptions`\n     * @return Returns a Promise\n     */\n    /**\n       * Modify an event with additional options. (iOS only)\n       *\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @param {string} [newTitle]  The new event title\n       * @param {string} [newLocation]  The new event location\n       * @param {string} [newNotes]  The new event notes\n       * @param {Date} [newStartDate]  The new event start date\n       * @param {Date} [newEndDate]  The new event end date\n       * @param {CalendarOptions} [filterOptions] Event Options, see `getCalendarOptions`\n       * @param {CalendarOptions} [newOptions]  New event options, see `getCalendarOptions`\n       * @return Returns a Promise\n       */\n    Calendar.prototype.modifyEventWithOptions = /**\n       * Modify an event with additional options. (iOS only)\n       *\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @param {string} [newTitle]  The new event title\n       * @param {string} [newLocation]  The new event location\n       * @param {string} [newNotes]  The new event notes\n       * @param {Date} [newStartDate]  The new event start date\n       * @param {Date} [newEndDate]  The new event end date\n       * @param {CalendarOptions} [filterOptions] Event Options, see `getCalendarOptions`\n       * @param {CalendarOptions} [newOptions]  New event options, see `getCalendarOptions`\n       * @return Returns a Promise\n       */\n    function (title, location, notes, startDate, endDate, newTitle, newLocation, newNotes, newStartDate, newEndDate, filterOptions, newOptions) {\n        return;\n    };\n    /**\n     * Delete an event.\n     *\n     * @param {string} [title]  The event title\n     * @param {string} [location]  The event location\n     * @param {string} [notes]  The event notes\n     * @param {Date} [startDate]  The event start date\n     * @param {Date} [endDate]  The event end date\n     * @return Returns a Promise\n     */\n    /**\n       * Delete an event.\n       *\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @return Returns a Promise\n       */\n    Calendar.prototype.deleteEvent = /**\n       * Delete an event.\n       *\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @return Returns a Promise\n       */\n    function (title, location, notes, startDate, endDate) {\n        return;\n    };\n    /**\n     * Delete an event from the specified Calendar. (iOS only)\n     *\n     * @param {string} [title]  The event title\n     * @param {string} [location]  The event location\n     * @param {string} [notes]  The event notes\n     * @param {Date} [startDate]  The event start date\n     * @param {Date} [endDate]  The event end date\n     * @param {string} calendarName\n     * @return Returns a Promise\n     */\n    /**\n       * Delete an event from the specified Calendar. (iOS only)\n       *\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @param {string} calendarName\n       * @return Returns a Promise\n       */\n    Calendar.prototype.deleteEventFromNamedCalendar = /**\n       * Delete an event from the specified Calendar. (iOS only)\n       *\n       * @param {string} [title]  The event title\n       * @param {string} [location]  The event location\n       * @param {string} [notes]  The event notes\n       * @param {Date} [startDate]  The event start date\n       * @param {Date} [endDate]  The event end date\n       * @param {string} calendarName\n       * @return Returns a Promise\n       */\n    function (title, location, notes, startDate, endDate, calendarName) {\n        return;\n    };\n    /**\n     * Open the calendar at the specified date.\n     * @param {Date} date The date you want to open the calendar on\n     * @return {Promise<any>} Promise returns a promise\n     */\n    /**\n       * Open the calendar at the specified date.\n       * @param {Date} date The date you want to open the calendar on\n       * @return {Promise<any>} Promise returns a promise\n       */\n    Calendar.prototype.openCalendar = /**\n       * Open the calendar at the specified date.\n       * @param {Date} date The date you want to open the calendar on\n       * @return {Promise<any>} Promise returns a promise\n       */\n    function (date) {\n        return;\n    };\n    Calendar.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"hasReadWritePermission\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"hasReadPermission\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"hasWritePermission\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"requestWritePermission\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"requestReadPermission\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"requestReadWritePermission\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"createCalendar\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"deleteCalendar\", null);\n    __decorate([\n        Cordova({\n            sync: true\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], Calendar.prototype, \"getCalendarOptions\", null);\n    __decorate([\n        Cordova({\n            sync: true\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], Calendar.prototype, \"getCreateCalendarOptions\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, String, Date,\n            Date]),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"createEvent\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, String, Date,\n            Date, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"createEventWithOptions\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, String, Date,\n            Date]),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"createEventInteractively\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, String, Date,\n            Date, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"createEventInteractivelyWithOptions\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, String, Date,\n            Date]),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"findEvent\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, String, Date,\n            Date, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"findEventWithOptions\", null);\n    __decorate([\n        Cordova({\n            platforms: ['Android']\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Date, Date]),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"listEventsInRange\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"listCalendars\", null);\n    __decorate([\n        Cordova({\n            platforms: ['iOS']\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"findAllEventsInNamedCalendar\", null);\n    __decorate([\n        Cordova({\n            platforms: ['iOS']\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, String, Date,\n            Date, String, String, String, Date,\n            Date]),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"modifyEvent\", null);\n    __decorate([\n        Cordova({\n            platforms: ['iOS']\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, String, Date,\n            Date, String, String, String, Date,\n            Date, Object, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"modifyEventWithOptions\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, String, Date,\n            Date]),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"deleteEvent\", null);\n    __decorate([\n        Cordova({\n            platforms: ['iOS']\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, String, Date,\n            Date, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"deleteEventFromNamedCalendar\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Date]),\n        __metadata(\"design:returntype\", Promise)\n    ], Calendar.prototype, \"openCalendar\", null);\n    /**\n     * @name Calendar\n     * @description\n     * This plugin allows you to add events to the Calendar of the mobile device.\n     *\n     * Requires Cordova plugin: `cordova-plugin-calendar`. For more info, please see the [Calendar plugin docs](https://github.com/EddyVerbruggen/Calendar-PhoneGap-Plugin).\n     *\n     *\n     * @usage\n     * ```typescript\n     * import { Calendar } from '@ionic-native/calendar';\n     *\n     * constructor(private calendar: Calendar) { }\n     *\n     *\n     * this.calendar.createCalendar('MyCalendar').then(\n     *   (msg) => { console.log(msg); },\n     *   (err) => { console.log(err); }\n     * );\n     * ```\n     * @interfaces\n     * CalendarOptions\n     * NameOrOptions\n     */\n    Calendar = __decorate([\n        Plugin({\n            pluginName: 'Calendar',\n            plugin: 'cordova-plugin-calendar',\n            pluginRef: 'plugins.calendar',\n            repo: 'https://github.com/EddyVerbruggen/Calendar-PhoneGap-Plugin',\n            platforms: ['Android', 'iOS']\n        })\n    ], Calendar);\n    return Calendar;\n}(IonicNativePlugin));\nexport { Calendar };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/calendar/index.js\n// module id = 343\n// module chunks = 1"],"sourceRoot":""}